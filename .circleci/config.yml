# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    #  - image: postgres:latest
    #    auth:
    #      username: mydockerhub-user
    #      password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        
     #   environment:
     #     POSTGRES_USER: postgres
     #     POSTGRES_PASSWORD: password
     #     POSTGRES_DB: db_name
     #     PGHOST: localhost
     #     PGUSER: postgres
      #    POSTGRES_HOST_AUTH_METHOD: trust
       # #  DATABASE_URL: "postgres://postgres@localhost:5432/db_name"
          
    steps:
      - run:  
         name: criar o banco
         command: 
                sudo apt update
                sudo apt install docker-ce docker-ce-cli containerd.io
                docker run --name postgres -e POSTGRES_PASSWORD=password -p 5432:5432 -d postgres 
    
      # Checkout the code as the first step.
      - checkout
     # - run:
      #    name: Wait for db to run
       #   command: dockerize -wait tcp://localhost:5432 -timeout 1m
  
      
      - run: sudo apt update && sudo apt install -y postgresql-client || true
      - run:
          name: Criar tabelas no postgres
          command: 
                  psql -c 'create database pdwdb;' -U postgres
                  #psql -U postgres -d pdwdb -f script/database/ddl.sql
      
      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
